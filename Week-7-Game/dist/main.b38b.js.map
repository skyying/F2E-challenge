{"version":3,"sources":["webpack:///./src/components/Const.js","webpack:///./src/components/Bullet.js","webpack:///./src/components/calc.js","webpack:///./src/components/Eimtter.js","webpack:///./src/components/Player.js","webpack:///./src/components/Canvas.js","webpack:///./src/components/enemy.js","webpack:///./src/components/shape.js","webpack:///./src/Game.js","webpack:///./src/index.js"],"names":["CENTER_POS","x","window","innerWidth","body","clienWidth","y","innerHeight","clientHeight","Bullet","emitter","_classCallCheck","this","pos","size","bulletSize","color","angle","currentRadius","positionRadius","initalRadius","degreeToRadian","deg","Math","PI","posofPointOnCircle","radius","cos","sin","Distance","p1","p2","dx","pow","dy","sqrt","getRandomInt","min","max","ceil","floor","random","RandomPoint","sides","coordinate","angleSume","i","push","Emitter","arguments","length","undefined","Eimtter_classCallCheck","bulletList","emitInterval","isDead","life","isHit","bulletSpeed","setEmitInterval","_this","start","Date","getTime","update","emit","requestAnimationFrame","dir","b","splice","Player","Player_classCallCheck","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","dashColor","glowColor","innerRadius","splitLines","splitLineWidth","innerGlowLevel","bulletHead","width","height","shrink","outerArc","outerArcWidth","turnSpeed","Eimtter","mx","my","theta","atan2","CanvasTool","parent","Canvas_classCallCheck","ctx","getCanvas","grid","canvas","drawShape","Circle","_ref","isFill","lineWidth","beginPath","fillStyle","strokeStyle","arc","fill","stroke","Polygon","_ref2","cord","moveTo","lineTo","closePath","Rectangle","_ref3","fillRect","clearRect","blurLevel","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","document","createElement","appendChild","getContext","_grid","player","DASH_DENSITY","resetShadow","setLineDash","LINE_WIDTH","setShadow","endPos","list","map","shape","type","_posofPointOnCircle","translate","rotate","ox","oy","isLose","message","font","textAlign","fillText","coordinatesForDraw","offsetAngle","_coordinatesForDraw","_slicedToArray","_coordinatesForDraw$","x1","y1","_coordinatesForDraw$2","x2","y2","_coordinatesForDraw$3","x3","y3","na","bullet","drawGridBg","drawCircleWithDash","drawCircleWithGlow","drawSplitLines","drawOuterArc","drawBulletHead","drawBullet","enemy","_this2","forEach","drawEnemy","enemy_Enemy","Enemy","enemy_classCallCheck","enemy_possibleConstructorReturn","setPos","enemy_CircleEnemy","_Enemy","CircleEnemy","_this3","side","enemy_inherits","enemy_createClass","key","value","_this4","playerBulletList","enemy_TriangleEnemey","_Enemy2","TriangleEnemey","_this5","initCoordinate","_this6","enemy_PolygonEnemy","_TriangleEnemey","PolygonEnemy","_this7","shape_shape","shape_classCallCheck","shape_Circle","_shape","shape_possibleConstructorReturn","shape_inherits","shape_HollowCircle","_shape2","HollowCircle","shape_Triangle","_shape3","Triangle","shape_Polygon","_Triangle","Game_Game","Game","Game_classCallCheck","createPlayer","levle","score","state","enemyList","landingShape","landingDripple","dripperList","drippleIn","drippleOut","landingMaxRadius","createEnemey","createDripple","createLandingShape","Game_createClass","ww","wh","s1","s2","s3","attack","approach","drippleList","abs","components_Player","p","t","c","angleInterval","angleSum","defualtAngle","repeat","split","letter","autoEmit","move","moveBullet","killEnemy","filter","collide","context","drawLanding","drawPlayer","drawEnemies","drawPlayingScene","startDripple","moveLandingShape","game","src_App","App","props","src_classCallCheck","src_possibleConstructorReturn","bind","react","setState","playing","content","react_default","a","className","onClick","react_dom_default","render","getElementById","cns","Canvas","init","addEventListener","e","code","startBtn","querySelector","clear","cx","clientX","cy","clientY","setAngle","landingAnimation","draw","detect","drawEnding"],"mappings":"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","file":"main.b38b.js","sourcesContent":["export const CENTER_POS = {\n    x: (window.innerWidth || window.body.clienWidth) / 2,\n    y: (window.innerHeight || window.body.clientHeight) / 2,\n}\n","// a bullet object, will draw bullet base on data below\nexport class Bullet {\n    constructor(emitter) {\n        this.pos = emitter.pos\n        this.size = emitter.bulletSize\n        this.color = emitter.color\n        this.angle = emitter.angle\n        this.currentRadius = emitter.positionRadius\n        this.initalRadius = emitter.positionRadius\n    }\n}\n\n","\n// some helper to calculate position and movement of shapes and objects\n\nexport const degreeToRadian = deg => (Math.PI / 180) * deg\nexport const posofPointOnCircle = (x, y, radius, deg) => {\n    // x, y is the position of circle center\n    let nX = x + Math.cos(degreeToRadian(deg)) * radius,\n        nY = y + Math.sin(degreeToRadian(deg)) * radius\n    return {x: nX, y: nY}\n}\n\n\nexport const Distance = (p1, p2) => {\n    let dx = Math.pow(p2.x - p1.x, 2),\n        dy = Math.pow(p2.y - p1.y, 2)\n    return Math.sqrt(dx + dy)\n}\n\n\n\nexport const getTriangeArea = (p1, p2, p3) => {\n    return (\n        (p1.x * (p2.y - p3.y) + p2.x * (p3.y - p1.y) + p3.x * (p1.y - p2.y)) / 2\n    )\n}\n\nexport const getRandomInt = (min, max) => {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    let ans = Math.floor(Math.random() * (max - min)) + min\n    return Math.floor(Math.random() * (max - min)) + min\n}\n\nexport const RandomPoint = (pos, sides, radius) => {\n    let coordinate = [],\n        angleInterval = 120,\n        angleSume = 0,\n        margin = 16\n    for (let i = 0; i < sides; i++) {\n        angleInterval =\n            sides === 3\n                ? 120\n                : getRandomInt(360 / sides - margin, 360 / sides + margin)\n        angleSume += angleInterval\n        coordinate.push(posofPointOnCircle(0, 0, radius, angleSume))\n    }\n\n    return coordinate\n    \n}\n\n\n\n// use degree instead of radius\nexport const posAfterRotate = (pos, angle) => {\n    return {\n        x:\n            pos.y * Math.cos(degreeToRadian(angle)) -\n            pos.x * Math.sin(degreeToRadian(angle)),\n        y:\n            pos.y * -Math.sin(degreeToRadian(angle)) +\n            pos.x * Math.cos(degreeToRadian(angle)),\n    }\n}\n\n\n\nexport const Vector = (p1, p2) => {\n    return [p1.x - p2.x, p1.y - p2.y]\n}\n","import {Bullet} from \"./Bullet.js\"\nimport {CENTER_POS} from \"./Const.js\"\nimport {degreeToRadian, getRandomInt, posofPointOnCircle} from \"./calc.js\"\n\n\n\n// a object will emmit bullet \nexport default class Emitter {\n    constructor(pos = CENTER_POS) {\n        this.pos = pos\n        this.angle = getRandomInt(0, 360)\n        this.bulletList = []\n        this.emitInterval = getRandomInt(2, 4)\n        this.isDead = false\n        this.life = 3\n        this.isHit = false\n        this.color\n        this.bulletSpeed = 8\n        this.setEmitInterval()\n    }\n    setEmitInterval() {\n        this.emitInterval = getRandomInt(3, 10) * 1000\n    }\n    emit() {\n        let self = this\n        this.bulletList.push(new Bullet(self))\n    }\n    autoEmit() {\n        let start = new Date().getTime()\n        const update = () => {\n            let current = new Date().getTime(),\n                dt = current - start\n            if (dt > this.emitInterval) {\n                this.emit()\n                start = new Date().getTime()\n            }\n            requestAnimationFrame(update)\n        }\n        update()\n    }\n    // when bullet is add to list, then change their position so that they looks like they\n    // are moving\n    moveBullet(dir = 1) {\n        for (let i = 0; i < this.bulletList.length; i++) {\n            let b = this.bulletList[i]\n            b.currentRadius += 5 * dir\n            b.pos = posofPointOnCircle(\n                CENTER_POS.x,\n                CENTER_POS.y,\n                b.currentRadius,\n                b.angle,\n            )\n            // if they are out of boundary, just remove them\n            if (b.currentRadius > window.innerWidth && this.bulletList.length) {\n                this.bulletList.splice(i, 1)\n            }\n        }\n    }\n}\n","import {CENTER_POS} from \"./Const.js\"\nimport Emitter from \"./Eimtter.js\"\nimport {degreeToRadian} from \"./calc.js\"\nexport default class Player extends Emitter {\n    constructor(pos = CENTER_POS) {\n        super()\n        this.dashColor = \"#74878E\"\n        this.glowColor = \"rgba(255, 255, 255, 0.6)\"\n        this.radius = 90\n        this.color = \"#fff\"\n        this.innerRadius = this.radius * 0.58\n        this.splitLines = 3\n        this.splitLineWidth = 3\n        this.innerGlowLevel = this.innerRadius * 0.35\n        this.bulletSize = 8\n        this.bulletHead = {\n            width: 40,\n            height: 26,\n            shrink: 6,\n        }\n        this.outerArc = 80\n        this.outerArcWidth = 6\n        this.turnSpeed = 5\n        this.positionRadius=90\n    }\n    // get new angle so that we can reset player's shooting direction\n    setAngle(mx, my) {\n        let dy = my - this.pos.y,\n            dx = mx - this.pos.x,\n            theta = Math.atan2(dy, dx)\n        theta *= 180 / Math.PI\n        this.angle = theta < 0 ? theta + 360 : theta\n    }\n}\n","import {degreeToRadian, posofPointOnCircle} from \"./calc.js\"\nimport {CENTER_POS} from \"./Const.js\"\n\n\n\n// this object will handle all canvas drawing tasks\nexport default class CanvasTool {\n    constructor(parent) {\n        this.parent = parent\n        this.ctx = this.getCanvas()\n        this.grid = {\n            size: 80,\n            color: \"rgba(255, 255, 255, 0.05)\",\n        }\n        this.canvas\n        this.drawShape = {\n            Circle: function(ctx, {pos, radius, isFill, lineWidth, color}) {\n                ctx.beginPath()\n                ctx.fillStyle = color\n                ctx.strokeStyle = color\n                ctx.arc(pos.x, pos.y, radius, 90, 0, 2 * Math.PI)\n                if (isFill) {\n                    ctx.fill()\n                } else {\n                    ctx.lineWidth = lineWidth\n                    ctx.stroke()\n                }\n            },\n            Polygon: function(ctx, {pos, cord, color}) {\n                ctx.beginPath()\n                ctx.moveTo(cord[0].x + pos.x, cord[0].y + pos.y)\n                for (let i = 1; i < cord.length; i++) {\n                    ctx.lineTo(cord[i].x + pos.x, cord[i].y + pos.y)\n                }\n                ctx.closePath()\n                ctx.fillStyle = color\n                ctx.fill()\n            },\n            Rectangle: function(ctx, {pos, width, height, color}) {\n                ctx.fillStyle = color\n                ctx.fillRect(pos.x, pos.y, width, height)\n            },\n        }\n    }\n    clear() {\n        this.ctx.clearRect(0, 0, window.innerWidth, window.innerHeight)\n    }\n    setShadow(color, blurLevel, x, y) {\n        this.ctx.shadowColor = color\n        this.ctx.shadowBlur = blurLevel\n        this.ctx.shadowOffsetX = x\n        this.ctx.shadowOffsetY = y\n    }\n    resetShadow() {\n        this.ctx.shadowColor = \"rgba(255, 255, 255, 0)\"\n        this.ctx.shadowOffsetX = 0\n        this.ctx.shadowOffsetY = 0\n        this.ctx.shadowBlur = 0\n    }\n    getCanvas() {\n        this.canvas = document.createElement(\"canvas\")\n        this.canvas.height = window.innerHeight || window.body.clientHeight\n        this.canvas.width = window.innerWidth || window.body.clienWidth\n        this.parent.appendChild(this.canvas)\n        return this.canvas.getContext(\"2d\")\n    }\n    drawGridBg() {\n        let {size, color} = this.grid,\n            i = 1\n        this.ctx.lineWidth = 1\n        this.ctx.strokeStyle = color\n        while (i * size < this.canvas.width) {\n            this.ctx.beginPath()\n            this.ctx.moveTo(i * size, 0)\n            this.ctx.lineTo(i * size, this.canvas.height)\n            this.ctx.stroke()\n            i++\n        }\n        i = 1\n        while (i * size < this.canvas.height) {\n            this.ctx.beginPath()\n            this.ctx.moveTo(0, i * size)\n            this.ctx.lineTo(this.canvas.width, i * size)\n            this.ctx.stroke()\n            i++\n        }\n    }\n    drawCircleWithDash(player) {\n        let {pos, radius, dashColor} = player\n        const DASH_DENSITY = radius / 14\n        this.resetShadow()\n        this.ctx.beginPath()\n        this.ctx.arc(pos.x, pos.y, radius, 90, 0, 2 * Math.PI)\n        this.ctx.strokeStyle = dashColor\n        this.ctx.setLineDash([DASH_DENSITY, DASH_DENSITY])\n        this.ctx.lineWidth = 2\n        this.ctx.stroke()\n        this.ctx.setLineDash([0, 0])\n    }\n    drawCircleWithGlow(player) {\n        let {\n            pos,\n            radius,\n            innerRadius,\n            color,\n            innerGlowLevel,\n            glowColor,\n        } = player\n        let LINE_WIDTH = radius / 8.5\n        this.ctx.beginPath()\n        this.ctx.arc(pos.x, pos.y, innerRadius, 90, 0, 2 * Math.PI)\n        this.ctx.strokeStyle = color\n        this.ctx.lineWidth = LINE_WIDTH\n        this.setShadow(glowColor, innerGlowLevel, 0, 0)\n        this.ctx.stroke()\n        this.resetShadow()\n    }\n    drawSplitLines(player) {\n        let {\n            pos,\n            innerRadius,\n            splitLines,\n            splitLineWidth,\n            innerGlowLevel,\n            glowColor,\n            angle,\n        } = player\n        this.ctx.beginPath()\n        for (let i = 0; i < splitLines; i++) {\n            this.ctx.moveTo(pos.x, pos.y)\n            let endPos = posofPointOnCircle(\n                pos.x,\n                pos.y,\n                innerRadius,\n                angle + (360 / splitLines) * i,\n            )\n            this.ctx.lineTo(endPos.x, endPos.y)\n            this.setShadow(glowColor, innerGlowLevel, 0, 0)\n            this.ctx.lineWidth = splitLineWidth\n            this.ctx.stroke()\n            this.resetShadow()\n        }\n    }\n    drawOuterArc(player) {\n        let {pos, radius, angle, outerArc, outerArcWidth} = player\n        this.ctx.beginPath()\n        this.ctx.arc(\n            pos.x,\n            pos.y,\n            radius + 24,\n            degreeToRadian(angle - outerArc / 2 - 180),\n            degreeToRadian(angle - 180 + outerArc / 2),\n        )\n        this.ctx.lineWidth = outerArcWidth\n        this.ctx.stroke()\n    }\n    drawLanding(list) {\n        list.map(shape => this.drawShape[shape.type](this.ctx, shape))\n    }\n    drawBulletHead(player) {\n        let {pos, radius, color, angle, bulletHead} = player\n        let {width, height, shrink} = bulletHead\n        let {x, y} = posofPointOnCircle(pos.x, pos.y, radius, angle)\n        this.ctx.translate(x, y)\n        this.ctx.rotate(degreeToRadian(angle))\n        let ox = 0 - width / 2,\n            oy = 0 - height / 2\n        this.ctx.beginPath()\n        this.ctx.moveTo(ox, oy)\n        this.ctx.lineTo(ox + width / 2, oy)\n        this.ctx.lineTo(ox + width, oy + shrink)\n        this.ctx.lineTo(ox + width, oy + height - shrink)\n        this.ctx.lineTo(ox + width / 2, oy + height)\n        this.ctx.lineTo(ox, oy + height)\n        this.ctx.closePath()\n        this.ctx.fillStyle = color\n        this.ctx.fill()\n        this.ctx.rotate(-degreeToRadian(angle))\n        this.ctx.translate(-x, -y)\n    }\n    line(p1, p2, color = \"white\") {\n        this.ctx.beginPath()\n        this.ctx.strokeStyle = color\n        this.ctx.moveTo(p1.x, p1.y)\n        this.ctx.lineWidth = 3\n        this.ctx.lineTo(p2.x, p2.y)\n        this.ctx.closePath()\n        this.ctx.stroke()\n    }\n    drawEnding(isLose) {\n        let win = \"HEN棒, 完美, 你真有耐心\",\n            lose = \"TRY AGAIN? JUST REFRESH THIS PAGE\"\n        let message = isLose ? lose : win\n        this.ctx.font = \"50px Roboto\"\n        this.ctx.fillStyle = \"white\"\n        this.ctx.textAlign = \"center\"\n\n        this.ctx.fillText(\n            `${message}`,\n            window.innerWidth / 2,\n            window.innerHeight / 2,\n        )\n    }\n    drawTriangle(shape) {\n        let {\n            pos,\n            shadowColor,\n            angle,\n            color,\n            coordinatesForDraw,\n            offsetAngle,\n        } = shape\n        let {x, y} = pos,\n            [[x1, y1], [x2, y2], [x3, y3]] = coordinatesForDraw,\n            na = degreeToRadian(angle - offsetAngle)\n\n        this.ctx.translate(x, y)\n        this.ctx.rotate(na)\n        this.ctx.beginPath()\n        this.ctx.moveTo(x1, y1)\n        this.ctx.lineTo(x2, y2)\n        this.ctx.lineTo(x3, y3)\n        this.ctx.closePath()\n        this.ctx.fillStyle = color\n        this.ctx.fill()\n        this.ctx.rotate(-na)\n        this.ctx.translate(-x, -y)\n    }\n    drawBullet(emitter) {\n        let {bulletList, bulletSize} = emitter\n        for (let i = 0; i < bulletList.length; i++) {\n            let bullet = bulletList[i].pos\n            let {x, y} = bullet\n            this.ctx.beginPath()\n            this.ctx.arc(x, y, bulletSize, 90, 0, 2 * Math.PI)\n            this.ctx.fillStyle = bullet.color\n            this.ctx.fill()\n        }\n    }\n    drawPlayer(player) {\n        this.drawGridBg()\n        this.drawCircleWithDash(player)\n        this.drawCircleWithGlow(player)\n        this.drawSplitLines(player)\n        this.drawOuterArc(player)\n        this.drawBulletHead(player)\n        this.drawBullet(player)\n    }\n    drawEnemy(enemy) {\n        this.drawShape[enemy.type](this.ctx, enemy)\n        this.drawBullet(enemy)\n    }\n    drawPlayingScene() {\n        this.drawShape[\"Rectangle\"](this.ctx, {\n            pos: {x: window.innerWidth - 400, y: 50},\n            color: \"#F6AF5F\",\n            width: 300,\n            height: 30,\n        })\n    }\n    drawEnemies(list) {\n        list.forEach(enemy => this.drawEnemy(enemy))\n    }\n}\n","import {\n    degreeToRadian,\n    getRandomInt,\n    posofPointOnCircle,\n    Distance,\n    RandomPoint,\n    posAfterRotate,\n} from \"./calc.js\"\nimport {Bullet, TrigBullet} from \"./Bullet.js\"\nimport {CENTER_POS} from \"./Const.js\"\nimport Emitter from \"./Eimtter.js\"\n\n\n// all kinds of enemy\nexport default class Enemy extends Emitter {\n    constructor() {\n        super()\n        this.positionRadius = window.innerHeight / 2 - 10\n        this.radius = window.innerWidth / 2 - 10\n        this.life = 2\n        this.isDead = this.life === 0\n        this.setPos()\n    }\n    setPos() {\n        this.pos = posofPointOnCircle(\n            CENTER_POS.x,\n            CENTER_POS.y,\n            this.positionRadius,\n            this.angle,\n        )\n    }\n    // change this enemy's postion so that they looks like they are moving\n    move() {\n        let start = new Date().getTime()\n        const update = () => {\n            let current = new Date().getTime(),\n                dt = current - start\n            if (dt > 1 && this.positionRadius > 130) {\n                this.positionRadius -= 0.1\n                this.setPos()\n                start = new Date().getTime()\n            }\n            requestAnimationFrame(update)\n        }\n        update()\n    }\n}\n\n\nexport class CircleEnemy extends Enemy {\n    constructor(radius = 50, angle = getRandomInt(0, 360)) {\n        super()\n        this.isFill = true\n        this.side = 0\n        this.angle = angle\n        this.bulletSize = 6\n        this.lineWidth = 0\n        this.type = \"Circle\"\n        this.color = \"#F6AF5F\"\n        this.radius = radius\n        this.setPos()\n    }\n    collide(player) {\n        let playerBulletList = player.bulletList\n        playerBulletList.forEach((bullet, i) => {\n            if (Distance(bullet.pos, this.pos) <= this.radius + bullet.size) {\n                playerBulletList.splice(i, 1)\n                this.life -= 1\n                return true\n            }\n            return false\n        })\n    }\n}\n\nexport class TriangleEnemey extends Enemy {\n    constructor(radius = 40, angle = getRandomInt(0, 360)) {\n        super()\n        this.radius = radius // how big the trainagle is\n        this.color = \"#2878cc\"\n        this.dx = (Math.random() - 0.5) * getRandomInt(1, 5)\n        this.dy = (Math.random() - 0.5) * getRandomInt(1, 5)\n        this.type = \"Polygon\"\n        this.sides = 3\n        this.angle = angle\n        this.initCoordinate = RandomPoint(\n            {x: 0, y: 0},\n            this.sides,\n            this.radius,\n        )\n        this.cord = this.initCoordinate\n        this.setPos()\n        this.bulletSize = 5\n    }\n    collide(player) {\n        let playerBulletList = player.bulletList\n        playerBulletList.forEach((bullet, i) => {\n            if (Distance(bullet.pos, this.pos) <= this.radius + bullet.size) {\n                playerBulletList.splice(i, 1)\n                this.life -= 1\n                return true\n            }\n            return false\n        })\n    }\n}\n\nexport class PolygonEnemy extends TriangleEnemey {\n    constructor(radius = 50, angle = getRandomInt(0, 360)) {\n        super()\n        this.radius = radius\n        this.color = \"#E8465D\"\n        this.dx = Math.random() - 0.5\n        this.dy = Math.random() - 0.5\n        this.type = \"Polygon\"\n        this.angle = angle\n        this.sides = 6\n        this.setPos()\n        this.bulletSize = 5\n        this.initCoordinate = RandomPoint(\n            {x: 0, y: 0},\n            this.sides,\n            this.radius,\n        )\n        this.cord = this.initCoordinate\n    }\n}\n\n","import {CENTER_POS} from \"./Const.js\"\nimport {RandomPoint ,getRandomInt} from \"./calc.js\"\n\n// simple shape objects for landing page\nclass shape {\n    constructor(pos = CENTER_POS) {\n        this.color = \"white\"\n        this.radius = 50\n        this.pos = pos\n    }\n}\n\nexport class Circle extends shape {\n    constructor(pos = CENTER_POS) {\n        super();\n        this.pos = pos\n        this.isFill = true\n        this.side = 0\n        this.lineWidth = 0\n        this.type = \"Circle\"\n        this.dx = Math.random() - 0.5 * getRandomInt(1, 2)\n        this.dy = Math.random() - 0.5 * getRandomInt(1, 3)\n        this.color = \"#F6AF5F\"\n    }\n}\n\nexport class HollowCircle extends shape {\n    constructor(color, radius=window.innerHeight / 2 - 150) {\n        super()\n        this.pos = CENTER_POS\n        this.radius = radius\n        this.color = color\n        this.dx = Math.random() - 0.5 * getRandomInt(1, 3)\n        this.dy = Math.random() - 0.5 * getRandomInt(1, 3)\n        this.type = \"Circle\"\n        this.side = 0\n        this.lineWidth = 1\n    }\n}\n\nexport class Triangle extends shape {\n    constructor(pos = CENTER_POS) {\n        super()\n        this.pos = pos\n        this.radius = 70 // how big the trainagle is\n        this.color = \"#2878cc\"\n        this.dx = (Math.random() - 0.5 ) * getRandomInt(1, 5)\n        this.dy = (Math.random() - 0.5) * getRandomInt(1, 5) \n        this.type = \"Polygon\"\n        this.sides = 3\n        this.angle = 0\n        this.initCoordinate = RandomPoint(\n            {x: 0, y: 0},\n            this.sides,\n            this.radius,\n        )\n        this.cord = this.initCoordinate\n    }\n}\n\nexport class Polygon extends Triangle {\n    constructor(pos = CENTER_POS) {\n        super()\n        this.pos = pos\n        this.radius = 60\n        this.color = \"#E8465D\"\n        this.dx = Math.random() - 0.5\n        this.dy = Math.random() - 0.5\n        this.type = \"Polygon\"\n        this.angle = 0\n        this.sides = 6\n        this.initCoordinate = RandomPoint(\n            {x: 0, y: 0},\n            this.sides,\n            this.radius,\n        )\n        this.cord = this.initCoordinate\n    }\n}\n","import Player from \"./components/Player.js\"\nimport {PolygonEnemy, CircleEnemy, TriangleEnemey} from \"./components/enemy.js\"\nimport {\n    RandomPoint,\n    getRandomInt,\n    degreeToRadian,\n    posofPointOnCircle,\n} from \"./components/calc.js\"\nimport {Triangle, HollowCircle, Circle, Polygon} from \"./components/shape.js\"\nimport {CENTER_POS} from \"./components/Const.js\"\n\nexport class Game {\n    constructor() {\n        this.player = this.createPlayer()\n        this.levle = 0\n        this.score = 0\n        this.state = 0\n        this.enemyList = []\n        this.landingShape = []\n        this.landingDripple = new HollowCircle()\n        this.dripperList = []\n        this.drippleIn = {\n            color: \"rgba(255, 255, 255, 1)\",\n            radius: window.innerHeight / 2 - 230,\n        }\n        this.drippleOut = {\n            color: \"rgba(255, 255, 255, .3)\",\n            radius: window.innerHeight / 2 - 100,\n        }\n        this.landingMaxRadius = 500\n        this.createEnemey(\n            getRandomInt(1, 3),\n            getRandomInt(1, 3),\n            getRandomInt(1, 4),\n        )\n        this.createDripple()\n        this.createLandingShape()\n    }\n    createLandingShape() {\n        let n = 3\n        let ww = window.innerWidth,\n            wh = window.innerHeight\n        let cord = []\n        for (let i = 0; i < n; i++) {\n            let x = getRandomInt(0, ww),\n                y = getRandomInt(0, wh)\n            cord.push({x: x, y: y})\n        }\n        let s1 = new Triangle(cord[0]),\n            s2 = new Polygon(cord[1]),\n            s3 = new Circle(cord[2])\n        this.landingShape = [s1, s2, s3]\n    }\n    init(state) {\n        this.state = state\n    }\n    start() {\n        this.state = 1\n        this.attack()\n        this.approach()\n    }\n    createDripple() {\n        this.drippleList = [\n            new HollowCircle(this.drippleIn.color, this.drippleIn.radius),\n            new HollowCircle(this.drippleOut.color, this.drippleOut.radius),\n        ]\n    }\n    startDripple() {\n        let ww = window.innerWidth / 2\n        if (this.drippleOut.radius < ww + 50) {\n            this.drippleOut.radius += 2\n        } else {\n            this.drippleOut.radius = Math.abs(ww - 330)\n        }\n\n        if (this.drippleIn.radius < ww + 50) {\n            this.drippleIn.radius += 3\n        } else {\n            this.drippleIn.radius = Math.abs(ww - 430)\n        }\n\n        this.drippleList = [\n            new HollowCircle(this.drippleIn.color, this.drippleIn.radius),\n            new HollowCircle(this.drippleOut.color, this.drippleOut.radius),\n        ]\n    }\n    createPlayer() {\n        let player = new Player()\n        return player\n    }\n    createEnemey(p = 1, t = 1, c = 1) {\n        let len = p + t + c,\n            mapList = (\"p\".repeat(p) + \"t\".repeat(t) + \"c\".repeat(c)).split(\"\")\n\n        let angleInterval,\n            angleSum = 0,\n            margin = 50,\n            defualtAngle = 360 / len\n\n        let list = mapList.map(letter => {\n            angleInterval = getRandomInt(\n                defualtAngle - margin,\n                defualtAngle + margin,\n            )\n            angleSum += angleInterval\n            if (letter === \"p\") {\n                return new PolygonEnemy(getRandomInt(40, 80), angleSum)\n            } else if (letter === \"t\") {\n                return new TriangleEnemey(getRandomInt(40, 60), angleSum)\n            } else {\n                return new CircleEnemy(getRandomInt(30, 50), angleSum)\n            }\n        })\n        this.enemyList = list\n    }\n    attack() {\n        this.enemyList.forEach(enemy => {\n            enemy.autoEmit()\n        })\n    }\n    approach() {\n        this.enemyList.forEach(enemy => {\n            enemy.move()\n        })\n    }\n    moveBullet() {\n        this.player.moveBullet()\n        this.enemyList.forEach(enemy => {\n            enemy.moveBullet(-1)\n            this.killEnemy()\n        })\n    }\n    killEnemy() {\n        if (this.enemyList.length) {\n            let list = this.enemyList.filter(enemy => enemy.life >= 0)\n            this.enemyList = list\n            this.enemyList.forEach(enemy => {\n                enemy.collide(this.player)\n            })\n        }\n    }\n    drawLanding(context) {\n        context.drawLanding(this.landingShape)\n        context.drawLanding(this.drippleList)\n    }\n    draw(context) {\n        context.drawPlayer(this.player)\n        context.drawEnemies(this.enemyList)\n        context.drawPlayingScene()\n    }\n    detect() {\n        if (!this.enemyList.length) {\n            this.state = -2\n        }\n        let touchedEnemy = this.enemyList.filter(\n            enemy => enemy.positionRadius <= 130,\n        ).length\n        if (touchedEnemy) {\n            this.state = -1\n        }\n    }\n    moveLandingShape() {\n        let list = this.landingShape\n        let ww = window.innerWidth,\n            wh = window.innerHeight\n        for (let i = 0; i < list.length; i++) {\n            let shape = list[i]\n            if (shape.pos.x + 100 > ww || shape.pos.x < 0) {\n                shape.dx = -shape.dx\n            }\n            if (shape.pos.y + 100 > wh || shape.pos.y < 0) {\n                shape.dy = -shape.dy\n            }\n            let x = shape.pos.x + shape.dx\n            let y = shape.pos.y + shape.dy\n            shape.pos = {x: x, y: y}\n        }\n    }\n    landingAnimation() {\n        this.startDripple()\n        this.moveLandingShape()\n    }\n}\n","import \"./style/main.scss\"\nimport React, {Component} from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Player from \"./components/Player.js\"\nimport CanvasTool from \"./components/Canvas.js\"\nimport {SplitEnemy} from \"./components/enemy.js\"\nimport {Game} from \"./Game.js\"\n\nconst playerBulletList = []\nconst enemyList = []\nlet game = new Game()\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            game: game.state\n        }\n        this.start = this.start.bind(this)\n    }\n    start() {\n        this.setState({\n            playing: true,\n        })\n    }\n    render() {\n        const content = (\n            <div className=\"landing\">\n                <div className=\"content\">\n                    <h1>R</h1>\n                    <h2>Radio Defense</h2>\n                    <a onClick={this.start}>Start Game</a>\n                </div>\n                <div className=\"notes\">\n                    Press W or Space to shoot. Press Arrow Key to control\n                    direction\n                </div>\n            </div>\n        )\n        return this.state.playing ? <div /> : content\n    }\n}\n\nReactDOM.render(<App />, document.getElementById(\"main\"))\n\nlet cns = new CanvasTool(document.getElementById(\"main\"))\n\ngame.init(0)\n\n\nlet start = new Date().getTime()\nconst update = () => {\n    let current = new Date().getTime(),\n        dt = current - start,\n        delay = 1\n    if (dt >= delay) {\n        game.moveBullet()\n        if (game.state === 0) {\n            game.landingAnimation()\n        }\n        start = new Date().getTime()\n    }\n    cns.clear()\n    // game state\n    // -1: game over, user win\n    // 0: landing\n    // 1: playing\n    // -2: game over, user lose\n    if (game.state === 0) {\n        game.drawLanding(cns)\n    } else if (game.state === 1) {\n        game.draw(cns)\n        game.detect()\n    } else if (game.state < 0) {\n        cns.drawEnding(game.state+2)\n    } \n    requestAnimationFrame(update)\n}\n\n\n// keybaord event\ndocument.addEventListener(\"keydown\", e => {\n    if (e.code === \"ArrowLeft\" || e.code === \"KeyH\") {\n        game.player.angle -= 5\n    } else if (e.code === \"ArrowRight\" || e.code === \"KeyL\") {\n        game.player.angle += 5\n    } else if (e.code === \"Space\" || e.code === \"KeyW\") {\n        game.player.emit()\n    }\n})\n\n// user click start button, start to play game \nlet startBtn = document.querySelector(\"a\")\nif (startBtn) {\n    startBtn.addEventListener(\"click\", e => {\n        game.state = 1\n        cns.clear()\n        game.start()\n    })\n}\n\n\n\n// detect click event if user game isn't over\ndocument.addEventListener(\"click\", e => {\n    if (game.state === 1) {\n        game.player.emit()\n    }\n})\n\n\n// let rotate player's angle alongwith mousemove event\ndocument.addEventListener(\n    \"mousemove\",\n    e => {\n        let cx = e.clientX,\n            cy = e.clientY\n        game.player.setAngle(cx, cy)\n    },\n    false,\n)\n\nupdate()\n"],"sourceRoot":""}