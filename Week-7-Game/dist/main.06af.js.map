{"version":3,"sources":["webpack:///./src/components/Const.js","webpack:///./src/components/Bullet.js","webpack:///./src/components/calc.js","webpack:///./src/components/Eimtter.js","webpack:///./src/components/Player.js","webpack:///./src/components/vector.js","webpack:///./src/components/Canvas.js","webpack:///./src/components/enemy.js","webpack:///./src/components/shape.js","webpack:///./src/Game.js","webpack:///./src/index.js"],"names":["CENTER_POS","x","window","innerWidth","body","clienWidth","y","innerHeight","clientHeight","Bullet","emitter","_classCallCheck","this","pos","size","bulletSize","color","angle","currentRadius","positionRadius","initalRadius","degreeToRadian","deg","Math","PI","posofPointOnCircle","radius","cos","sin","Distance","p1","p2","dx","pow","dy","sqrt","getRandomInt","min","max","ceil","floor","random","RandomPoint","sides","coordinate","angleSume","i","push","Emitter","arguments","length","undefined","Eimtter_classCallCheck","bulletList","emitInterval","isDead","life","isHit","bulletSpeed","setEmitInterval","_this","start","Date","getTime","update","emit","requestAnimationFrame","dir","b","splice","Player","Player_classCallCheck","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","dashColor","glowColor","innerRadius","splitLines","splitLineWidth","innerGlowLevel","bulletHead","width","height","shrink","outerArc","outerArcWidth","turnSpeed","Eimtter","mx","my","theta","atan2","Vector","origin","vector_classCallCheck","vec","circle","dist","cirDist","abs","CanvasTool","parent","Canvas_classCallCheck","ctx","getCanvas","grid","canvas","drawShape","Circle","_ref","isFill","lineWidth","beginPath","fillStyle","strokeStyle","arc","fill","stroke","Polygon","_ref2","cord","moveTo","lineTo","closePath","Rectangle","_ref3","fillRect","clearRect","blurLevel","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","document","createElement","appendChild","getContext","_grid","player","DASH_DENSITY","resetShadow","setLineDash","LINE_WIDTH","setShadow","endPos","list","map","shape","type","_posofPointOnCircle","translate","rotate","ox","oy","isLose","message","font","textAlign","fillText","coordinatesForDraw","offsetAngle","_coordinatesForDraw","_slicedToArray","_coordinatesForDraw$","x1","y1","_coordinatesForDraw$2","x2","y2","_coordinatesForDraw$3","x3","y3","na","bullet","drawGridBg","drawCircleWithDash","drawCircleWithGlow","drawSplitLines","drawOuterArc","drawBulletHead","drawBullet","enemy","_this2","forEach","drawEnemy","enemy_Enemy","Enemy","enemy_classCallCheck","enemy_possibleConstructorReturn","setPos","enemy_CircleEnemy","_Enemy","CircleEnemy","_this3","side","enemy_inherits","enemy_createClass","key","value","_this4","playerBulletList","enemy_TriangleEnemey","_Enemy2","TriangleEnemey","_this5","initCoordinate","_this6","enemy_PolygonEnemy","_TriangleEnemey","PolygonEnemy","_this7","shape_shape","shape_classCallCheck","shape_Circle","_shape","shape_possibleConstructorReturn","shape_inherits","shape_HollowCircle","_shape2","HollowCircle","shape_Triangle","_shape3","Triangle","shape_Polygon","_Triangle","Game_Game","Game","Game_classCallCheck","createPlayer","levle","score","state","enemyList","landingShape","landingDripple","dripperList","drippleIn","drippleOut","landingMaxRadius","createEnemey","createDripple","createLandingShape","Game_createClass","ww","wh","s1","s2","s3","attack","approach","drippleList","components_Player","p","t","c","angleInterval","angleSum","defualtAngle","repeat","split","letter","autoEmit","move","moveBullet","killEnemy","filter","collide","context","drawLanding","drawPlayer","drawEnemies","drawPlayingScene","startDripple","moveLandingShape","game","src_App","App","props","src_classCallCheck","src_possibleConstructorReturn","bind","react","setState","playing","content","react_default","a","className","onClick","react_dom_default","render","getElementById","cns","Canvas","init","addEventListener","e","code","startBtn","querySelector","clear","cx","clientX","cy","clientY","setAngle","landingAnimation","draw","detect","drawEnding"],"mappings":"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","file":"main.06af.js","sourcesContent":["export const CENTER_POS = {\n    x: (window.innerWidth || window.body.clienWidth) / 2,\n    y: (window.innerHeight || window.body.clientHeight) / 2,\n}\n","export class Bullet {\n    constructor(emitter) {\n        this.pos = emitter.pos\n        this.size = emitter.bulletSize\n        this.color = emitter.color\n        this.angle = emitter.angle\n        this.currentRadius = emitter.positionRadius\n        this.initalRadius = emitter.positionRadius\n    }\n}\n\n// class EnemyBullet extends Bullet {\n//     constructor() {\n//         super()\n//         this.distance\n//     }\n//     isHit(player) {\n//         this.distance = Math.sqrt(\n//             Math.pow(player.pos.x - this.pos.x, 2) +\n//                 Math.pow(player.pos.y - this.pos.y, 2),\n//         )\n//         if (this.distnace < player.radius + this.radius) {\n//             return true\n//         }\n//     }\n// }\n\n// export class TrigBullet extends EnemyBullet{\n//     constructor() {\n//         super()\n//         this.color = \"#3677BB\"\n//     }\n// }\n","export const degreeToRadian = deg => (Math.PI / 180) * deg\nexport const posofPointOnCircle = (x, y, radius, deg) => {\n    // x, y is the position of circle center\n    let nX = x + Math.cos(degreeToRadian(deg)) * radius,\n        nY = y + Math.sin(degreeToRadian(deg)) * radius\n    return {x: nX, y: nY}\n}\n\nexport const Distance = (p1, p2) => {\n    let dx = Math.pow(p2.x - p1.x, 2),\n        dy = Math.pow(p2.y - p1.y, 2)\n    return Math.sqrt(dx + dy)\n}\n\nexport const getTriangeArea = (p1, p2, p3) => {\n    return (\n        (p1.x * (p2.y - p3.y) + p2.x * (p3.y - p1.y) + p3.x * (p1.y - p2.y)) / 2\n    )\n}\n\nexport const getRandomInt = (min, max) => {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    let ans = Math.floor(Math.random() * (max - min)) + min\n    return Math.floor(Math.random() * (max - min)) + min\n}\n\nexport const RandomPoint = (pos, sides, radius) => {\n    // should return\n    let coordinate = [],\n        angleInterval = 120,\n        angleSume = 0,\n        margin = 16\n    for (let i = 0; i < sides; i++) {\n        angleInterval =\n            sides === 3\n                ? 120\n                : getRandomInt(360 / sides - margin, 360 / sides + margin)\n        angleSume += angleInterval\n        coordinate.push(posofPointOnCircle(0, 0, radius, angleSume))\n    }\n\n    return coordinate\n\n    \n}\n\n// use degree instead of radius\nexport const posAfterRotate = (pos, angle) => {\n    return {\n        x:\n            pos.y * Math.cos(degreeToRadian(angle)) -\n            pos.x * Math.sin(degreeToRadian(angle)),\n        y:\n            pos.y * -Math.sin(degreeToRadian(angle)) +\n            pos.x * Math.cos(degreeToRadian(angle)),\n    }\n}\n\nexport const Vector = (p1, p2) => {\n    return [p1.x - p2.x, p1.y - p2.y]\n}\n","import {Bullet} from \"./Bullet.js\"\nimport {CENTER_POS} from \"./Const.js\"\nimport {degreeToRadian, getRandomInt, posofPointOnCircle} from \"./calc.js\"\nimport {TimeOut} from \"./timeout.js\"\n\nexport default class Emitter {\n    constructor(pos = CENTER_POS) {\n        this.pos = pos\n        this.angle = getRandomInt(0, 360);\n        this.bulletList = []\n        this.emitInterval = getRandomInt(2, 4)\n        this.isDead = false\n        this.life = 3\n        this.isHit = false\n        this.color\n        this.bulletSpeed = 8\n        this.setEmitInterval()\n    }\n    setEmitInterval() {\n        this.emitInterval = getRandomInt(3, 10) * 1000\n    }\n    emit() {\n        let self = this\n        this.bulletList.push(new Bullet(self))\n    }\n    autoEmit() {\n        let start = new Date().getTime()\n        const update = () => {\n            let current = new Date().getTime(),\n                dt = current - start\n            if (dt > this.emitInterval) {\n                this.emit()\n                start = new Date().getTime()\n            }\n            requestAnimationFrame(update)\n        }\n        update()\n    }\n    moveBullet(dir = 1) {\n        for (let i = 0; i < this.bulletList.length; i++) {\n            let b = this.bulletList[i]\n            b.currentRadius += 5 * dir\n            b.pos = posofPointOnCircle(\n                CENTER_POS.x,\n                CENTER_POS.y,\n                b.currentRadius,\n                b.angle,\n            )\n            if (b.currentRadius > window.innerWidth && this.bulletList.length) {\n                this.bulletList.splice(i, 1)\n            }\n        }\n    }\n}\n","import {CENTER_POS} from \"./Const.js\"\nimport Emitter from \"./Eimtter.js\"\nimport {degreeToRadian} from \"./calc.js\"\nexport default class Player extends Emitter {\n    constructor(pos = CENTER_POS) {\n        super()\n        this.dashColor = \"#74878E\"\n        this.glowColor = \"rgba(255, 255, 255, 0.6)\"\n        this.radius = 90\n        this.color = \"#fff\"\n        this.innerRadius = this.radius * 0.58\n        this.splitLines = 3\n        this.splitLineWidth = 3\n        this.innerGlowLevel = this.innerRadius * 0.35\n        this.bulletSize = 8\n        this.bulletHead = {\n            width: 40,\n            height: 26,\n            shrink: 6,\n        }\n        this.outerArc = 80\n        this.outerArcWidth = 6\n        this.turnSpeed = 5\n        this.positionRadius=90\n    }\n    setAngle(mx, my) {\n        let dy = my - this.pos.y,\n            dx = mx - this.pos.x,\n            theta = Math.atan2(dy, dx)\n        theta *= 180 / Math.PI\n        this.angle = theta < 0 ? theta + 360 : theta\n    }\n}\n","import {Distance} from \"./calc.js\"\n\nexport default class Vector {\n    constructor(x = 0, y = 0, origin = {x: 0, y: 0}) {\n        this.pos = {\n            x: x,\n            y: y,\n        }\n        this.origin = origin\n    }\n    setOrigin(pos) {\n        this.origin = pos\n    }\n    angle(vec){\n    \n    }\n    collide(circle) {\n        let dist = Distance(this.origin, this.pos)\n        let cirDist =\n            Distance(circle.pos, this.pos) + Distance(circle.pos, this.origin)\n        if (Math.abs(dist - cirDist) < 1) {\n            return true\n        }\n    }\n}\n// add(vec) {\n//     return new Vector(\n//         this.pos.x + vec.pos.x,\n//         this.pos.y + vec.pos.y,\n//         this.origin,\n//     )\n// }\n// magnitude() {\n//     // this is not right, should minus origin\n//     return Math.sqrt(Math.pow(this.pos.x, 2) + Math.pow(this.pos.y, 2))\n// }\n// multiply(scaler) {\n//     let ne = new Vector(\n//         scaler * this.pos.x,\n//         scaler * this.pos.y,\n//         this.origin,\n//     )\n//     return ne\n// }\n// dot(vec) {\n//     let d = this.pos.x * vec.pos.x + this.pos.y * vec.pos.y\n//     return d\n// }\n// project(ontoVec) {\n//     let n = ontoVec.dot(this),\n//         d = this.dot(this)\n//     let scaler = n / d\n//     return this.multiply(scaler)\n// }\n\n// console.log(\"scaler\", lv.project(vx))\n// console.log(lv, vx);\n\n// Vector.prototype = {\n//     setOrigin: function(pos) {\n//         this.origin = pos\n//     },\n//     add: function(vec) {\n//         return new Vector(\n//             this.pos.x + vec.pos.x,\n//             this.pos.y + vec.pos.y,\n//             this.origin,\n//         )\n//     },\n//     magnitude: function() {\n//         return Math.sqrt(Math.pow(this.pos.x, 2) + Math.pow(this.pos.y, 2))\n//     },\n//     multiply: function(scaler) {\n//         return new Vector(\n//             scaler * this.pos.x,\n//             scaler * this.pos.y,\n//             this.origin,\n//         )\n//     },\n//     dot: function(vec) {\n//         return this.pos.x * vec.pos.x + this.pos.y * vec.pos.y\n//     },\n//     project: function(ontoVec) {\n//         let scaler = ontoVec.dot(this) / this.dot(this)\n//         return this.multiply(scaler)\n//     },\n// }\n","import Vector from \"./vector.js\"\nimport {degreeToRadian, posofPointOnCircle} from \"./calc.js\"\nimport {CENTER_POS} from \"./Const.js\"\n\nexport default class CanvasTool {\n    constructor(parent) {\n        this.parent = parent\n        this.ctx = this.getCanvas()\n        this.grid = {\n            size: 80,\n            color: \"rgba(255, 255, 255, 0.05)\",\n        }\n        this.canvas\n        this.drawShape = {\n            Circle: function(ctx, {pos, radius, isFill, lineWidth, color}) {\n                ctx.beginPath()\n                ctx.fillStyle = color\n                ctx.strokeStyle = color\n                ctx.arc(pos.x, pos.y, radius, 90, 0, 2 * Math.PI)\n                if (isFill) {\n                    ctx.fill()\n                } else {\n                    ctx.lineWidth = lineWidth\n                    ctx.stroke()\n                }\n            },\n            Polygon: function(ctx, {pos, cord, color}) {\n                ctx.beginPath()\n                ctx.moveTo(cord[0].x + pos.x, cord[0].y + pos.y)\n                for (let i = 1; i < cord.length; i++) {\n                    ctx.lineTo(cord[i].x + pos.x, cord[i].y + pos.y)\n                }\n                ctx.closePath()\n                ctx.fillStyle = color\n                ctx.fill()\n            },\n            Rectangle : function(ctx, {pos, width,height, color}){\n                ctx.fillStyle= color;\n                ctx.fillRect(pos.x, pos.y, width, height)\n            }\n        }\n    }\n    clear() {\n        this.ctx.clearRect(0, 0, window.innerWidth, window.innerHeight)\n    }\n    setShadow(color, blurLevel, x, y) {\n        this.ctx.shadowColor = color\n        this.ctx.shadowBlur = blurLevel\n        this.ctx.shadowOffsetX = x\n        this.ctx.shadowOffsetY = y\n    }\n    resetShadow() {\n        this.ctx.shadowColor = \"rgba(255, 255, 255, 0)\"\n        this.ctx.shadowOffsetX = 0\n        this.ctx.shadowOffsetY = 0\n        this.ctx.shadowBlur = 0\n    }\n    getCanvas() {\n        this.canvas = document.createElement(\"canvas\")\n        this.canvas.height = window.innerHeight || window.body.clientHeight\n        this.canvas.width = window.innerWidth || window.body.clienWidth\n        this.parent.appendChild(this.canvas)\n        return this.canvas.getContext(\"2d\")\n    }\n    drawGridBg() {\n        let {size, color} = this.grid,\n            i = 1\n        this.ctx.lineWidth = 1\n        this.ctx.strokeStyle = color\n        while (i * size < this.canvas.width) {\n            this.ctx.beginPath()\n            this.ctx.moveTo(i * size, 0)\n            this.ctx.lineTo(i * size, this.canvas.height)\n            this.ctx.stroke()\n            i++\n        }\n        i = 1\n        while (i * size < this.canvas.height) {\n            this.ctx.beginPath()\n            this.ctx.moveTo(0, i * size)\n            this.ctx.lineTo(this.canvas.width, i * size)\n            this.ctx.stroke()\n            i++\n        }\n    }\n    drawCircleWithDash(player) {\n        let {pos, radius, dashColor} = player\n        const DASH_DENSITY = radius / 14\n        this.resetShadow()\n        this.ctx.beginPath()\n        this.ctx.arc(pos.x, pos.y, radius, 90, 0, 2 * Math.PI)\n        this.ctx.strokeStyle = dashColor\n        this.ctx.setLineDash([DASH_DENSITY, DASH_DENSITY])\n        this.ctx.lineWidth = 2\n        this.ctx.stroke()\n        this.ctx.setLineDash([0, 0])\n    }\n    drawCircleWithGlow(player) {\n        let {\n            pos,\n            radius,\n            innerRadius,\n            color,\n            innerGlowLevel,\n            glowColor,\n        } = player\n        let LINE_WIDTH = radius / 8.5\n        this.ctx.beginPath()\n        this.ctx.arc(pos.x, pos.y, innerRadius, 90, 0, 2 * Math.PI)\n        this.ctx.strokeStyle = color\n        this.ctx.lineWidth = LINE_WIDTH\n        this.setShadow(glowColor, innerGlowLevel, 0, 0)\n        this.ctx.stroke()\n        this.resetShadow()\n    }\n    drawSplitLines(player) {\n        let {\n            pos,\n            innerRadius,\n            splitLines,\n            splitLineWidth,\n            innerGlowLevel,\n            glowColor,\n            angle,\n        } = player\n        this.ctx.beginPath()\n        for (let i = 0; i < splitLines; i++) {\n            this.ctx.moveTo(pos.x, pos.y)\n            let endPos = posofPointOnCircle(\n                pos.x,\n                pos.y,\n                innerRadius,\n                angle + (360 / splitLines) * i,\n            )\n            this.ctx.lineTo(endPos.x, endPos.y)\n            this.setShadow(glowColor, innerGlowLevel, 0, 0)\n            this.ctx.lineWidth = splitLineWidth\n            this.ctx.stroke()\n            this.resetShadow()\n        }\n    }\n    drawOuterArc(player) {\n        let {pos, radius, angle, outerArc, outerArcWidth} = player\n        this.ctx.beginPath()\n        this.ctx.arc(\n            pos.x,\n            pos.y,\n            radius + 24,\n            degreeToRadian(angle - outerArc / 2 - 180),\n            degreeToRadian(angle - 180 + outerArc / 2),\n        )\n        this.ctx.lineWidth = outerArcWidth\n        this.ctx.stroke()\n    }\n    drawLanding(list) {\n        list.map(shape => this.drawShape[shape.type](this.ctx, shape))\n    }\n    drawBulletHead(player) {\n        let {pos, radius, color, angle, bulletHead} = player\n        let {width, height, shrink} = bulletHead\n        let {x, y} = posofPointOnCircle(pos.x, pos.y, radius, angle)\n        this.ctx.translate(x, y)\n        this.ctx.rotate(degreeToRadian(angle))\n        let ox = 0 - width / 2,\n            oy = 0 - height / 2\n        this.ctx.beginPath()\n        this.ctx.moveTo(ox, oy)\n        this.ctx.lineTo(ox + width / 2, oy)\n        this.ctx.lineTo(ox + width, oy + shrink)\n        this.ctx.lineTo(ox + width, oy + height - shrink)\n        this.ctx.lineTo(ox + width / 2, oy + height)\n        this.ctx.lineTo(ox, oy + height)\n        this.ctx.closePath()\n        this.ctx.fillStyle = color\n        this.ctx.fill()\n        this.ctx.rotate(-degreeToRadian(angle))\n        this.ctx.translate(-x, -y)\n    }\n    // drawTrig(shape) {\n    //     let [p1, p2, p3] = shape.getVertice()\n    //     this.ctx.beginPath()\n    //     this.ctx.moveTo(p1.x, p1.y)\n    //     this.ctx.lineTo(p2.x, p2.y)\n    //     this.ctx.lineTo(p3.x, p3.y)\n    //     this.ctx.closePath()\n    //     this.ctx.fillStyle = \"red\"\n    //     this.ctx.fill()\n\n    //     let {pos} = shape\n    //     this.ctx.fillStyle = \"white\"\n    //     this.ctx.fillRect(pos.x, pos.y, 10, 10)\n    // }\n    // test(player) {\n    //     // wall\n    //     let origin = {x: 100, y: 200}\n    //     let mouseVec = new Vector(mx, my, origin);\n    //     (mouseVec.pos.x = mx), (mouseVec.pos.y = my)\n    //     let wall = new Vector(200, 100, origin)\n    //     this.line(wall.origin, wall.pos)\n    //     this.line(mouseVec.pos, origin, \"green\")\n\n    //     if (wall.collide(mouseVec)) {\n    //         this.line(wall.origin, wall.pos, \"red\")\n    //     }\n\n    // }\n    line(p1, p2, color = \"white\") {\n        this.ctx.beginPath()\n        this.ctx.strokeStyle = color\n        this.ctx.moveTo(p1.x, p1.y)\n        this.ctx.lineWidth = 3\n        this.ctx.lineTo(p2.x, p2.y)\n        this.ctx.closePath()\n        this.ctx.stroke()\n    }\n    drawEnding(isLose ) {\n        let win=\"HEN棒, 完美, 你真有耐心\",\n            lose =\"TRY AGAIN? JUST REFRESH THIS PAGE\"\n        let message= isLose ? lose : win\n        this.ctx.font = \"50px Roboto\"\n        this.ctx.fillStyle = \"white\"\n        this.ctx.textAlign = \"center\"\n        \n        this.ctx.fillText(`${ message }`, window.innerWidth / 2, window.innerHeight/2)\n    }\n    drawTriangle(shape) {\n        let {\n            pos,\n            shadowColor,\n            angle,\n            color,\n            coordinatesForDraw,\n            offsetAngle,\n        } = shape\n        let {x, y} = pos,\n            [[x1, y1], [x2, y2], [x3, y3]] = coordinatesForDraw,\n            na = degreeToRadian(angle - offsetAngle)\n\n        this.ctx.translate(x, y)\n        this.ctx.rotate(na)\n        this.ctx.beginPath()\n        this.ctx.moveTo(x1, y1)\n        this.ctx.lineTo(x2, y2)\n        this.ctx.lineTo(x3, y3)\n        this.ctx.closePath()\n        this.ctx.fillStyle = color\n        // this.setShadow(shadowColor, 0, -10, -5)  //shadowEffect\n        this.ctx.fill()\n        this.ctx.rotate(-na)\n        this.ctx.translate(-x, -y)\n    }\n    drawBullet(emitter) {\n        let {bulletList, bulletSize} = emitter\n        for (let i = 0; i < bulletList.length; i++) {\n            let bullet = bulletList[i].pos\n            let {x, y} = bullet\n            this.ctx.beginPath()\n            this.ctx.arc(x, y, bulletSize, 90, 0, 2 * Math.PI)\n            this.ctx.fillStyle = bullet.color\n            this.ctx.fill()\n        }\n    }\n    drawPlayer(player) {\n        this.drawGridBg()\n        this.drawCircleWithDash(player)\n        this.drawCircleWithGlow(player)\n        this.drawSplitLines(player)\n        this.drawOuterArc(player)\n        this.drawBulletHead(player)\n        this.drawBullet(player)\n    }\n    drawEnemy(enemy) {\n        this.drawShape[enemy.type](this.ctx, enemy)\n        this.drawBullet(enemy)\n    }\n    drawPlayingScene(){\n        this.drawShape[\"Rectangle\"](this.ctx, {\n            pos: {x: window.innerWidth - 400, y: 50} ,\n            color: \"#F6AF5F\",\n            width: 300,\n            height: 30\n        })\n    \n    }\n    drawEnemies(list) {\n        list.forEach(enemy => this.drawEnemy(enemy))\n    }\n\n}\n","import {\n    degreeToRadian,\n    getRandomInt,\n    posofPointOnCircle,\n    Distance,\n    RandomPoint,\n    posAfterRotate,\n} from \"./calc.js\"\nimport {Bullet, TrigBullet} from \"./Bullet.js\"\nimport {CENTER_POS} from \"./Const.js\"\nimport Emitter from \"./Eimtter.js\"\nimport Vector from \"./vector.js\"\n\nexport default class Enemy extends Emitter {\n    constructor() {\n        super()\n        this.positionRadius = window.innerHeight / 2 - 10\n        this.radius = window.innerWidth / 2 - 10\n        this.life = 2\n        this.isDead = this.life === 0\n        this.setPos()\n    }\n    setPos() {\n        this.pos = posofPointOnCircle(\n            CENTER_POS.x,\n            CENTER_POS.y,\n            this.positionRadius,\n            this.angle,\n        )\n    }\n    move() {\n        let start = new Date().getTime()\n        const update = () => {\n            let current = new Date().getTime(),\n                dt = current - start\n            if (dt > 1 && this.positionRadius > 130) {\n                this.positionRadius -= 0.1\n                this.setPos()\n                start = new Date().getTime()\n            }\n            requestAnimationFrame(update)\n        }\n        update()\n    }\n}\n\nexport class CircleEnemy extends Enemy {\n    constructor(radius=50, angle=getRandomInt(0, 360)) {\n        super()\n        this.isFill = true\n        this.side = 0\n        this.angle=angle\n        this.bulletSize = 6\n        this.lineWidth = 0\n        this.type = \"Circle\"\n        this.color = \"#F6AF5F\"\n        this.radius = radius\n        this.setPos()\n    }\n    collide(player) {\n        let playerBulletList = player.bulletList\n        playerBulletList.forEach((bullet, i) => {\n            if (Distance(bullet.pos, this.pos) <= this.radius + bullet.size) {\n                playerBulletList.splice(i, 1)\n                this.life -= 1\n                return true\n            }\n            return false\n        })\n    }\n}\n\nexport class TriangleEnemey extends Enemy {\n    constructor(radius=40, angle=getRandomInt(0, 360)) {\n        super()\n        this.radius = radius // how big the trainagle is\n        this.color = \"#2878cc\"\n        this.dx = (Math.random() - 0.5) * getRandomInt(1, 5)\n        this.dy = (Math.random() - 0.5) * getRandomInt(1, 5)\n        this.type = \"Polygon\"\n        this.sides = 3\n        this.angle = angle\n        this.initCoordinate = RandomPoint(\n            {x: 0, y: 0},\n            this.sides,\n            this.radius,\n        )\n        this.cord = this.initCoordinate\n        this.setPos()\n        this.bulletSize=5\n\n    }\n    collide(player) {\n        let playerBulletList = player.bulletList\n        playerBulletList.forEach((bullet, i) => {\n            if (Distance(bullet.pos, this.pos) <= this.radius + bullet.size) {\n                playerBulletList.splice(i, 1)\n                this.life -= 1\n                return true\n            }\n            return false\n        })\n    }\n}\n\n\nexport class PolygonEnemy extends TriangleEnemey {\n    constructor(radius=50, angle=getRandomInt(0, 360)) {\n        super()\n        this.radius = radius\n        this.color = \"#E8465D\"\n        this.dx = Math.random() - 0.5\n        this.dy = Math.random() - 0.5\n        this.type = \"Polygon\"\n        this.angle = angle\n        this.sides = 6\n        this.setPos()\n        this.bulletSize=5\n        this.initCoordinate = RandomPoint(\n            {x: 0, y: 0},\n            this.sides,\n            this.radius,\n        )\n        this.cord = this.initCoordinate\n    }\n}\n\n\n\n// export class SplitEnemy extends Enemy {\n//     constructor() {\n//         super()\n//         this.shadowColor = \"rgba(40, 120, 204, .5)\"\n//         this.type = \"Triangle\"\n//         this.color = \"#2878CC\"\n//         // let traingle veritce face player at center\n//         this.offsetAngle = 180\n//         this.width = 60\n//         this.bulletSize = 5\n//         this.height = 80\n//         this.coordinatesForDraw = [\n//             [this.width, 0],\n//             [0, 0 - this.height / 2],\n//             [0, this.height / 2],\n//         ]\n//     }\n//     verticeAftrRotate() {\n//         let vertices = []\n//         for (let i = 0; i < this.getVertice().length; i++) {\n//             let v = this.getVertice()[i]\n//             vertices.push(posAfterRotate(this.angle))\n//         }\n//         return vertices\n//     }\n//     getVertice() {\n//         return [\n//             {\n//                 x: this.pos.x + this.width,\n//                 y: this.pos.y,\n//             },\n//             {\n//                 x: this.pos.x,\n//                 y: this.pos.y - this.height / 2,\n//             },\n//             {\n//                 x: this.pos.x,\n//                 y: this.pos.y + this.height / 2,\n//             },\n//         ]\n//     }\n//     collide(player) {\n//         let playerBulletList = player.bulletList\n//         playerBulletList.forEach((bullet, i) => {\n//             this.getVertice().forEach((point, j) => {\n//                 let nextIndex = j == 2 ? 0 : j,\n//                     nextPoint = this.getVertice()[nextIndex]\n//                 let edge = new Vector(point.x, point.y, nextPoint)\n//                 if (edge.collide(bullet)) {\n//                     playerBulletList.splice(i, 1)\n//                     this.life -= 1\n//                     return true\n//                 }\n//             })\n//         })\n//         return false\n//     }\n// }\n","import {CENTER_POS} from \"./Const.js\"\nimport {RandomPoint ,getRandomInt} from \"./calc.js\"\n\nclass shape {\n    constructor(pos = CENTER_POS) {\n        this.color = \"white\"\n        this.radius = 50\n        this.pos = pos\n    }\n}\n\nexport class Circle extends shape {\n    constructor(pos = CENTER_POS) {\n        super();\n        this.pos = pos\n        this.isFill = true\n        this.side = 0\n        this.lineWidth = 0\n        this.type = \"Circle\"\n        this.dx = Math.random() - 0.5 * getRandomInt(1, 2)\n        this.dy = Math.random() - 0.5 * getRandomInt(1, 3)\n        this.color = \"#F6AF5F\"\n    }\n}\n\nexport class HollowCircle extends shape {\n    constructor(color, radius=window.innerHeight / 2 - 150) {\n        super()\n        this.pos = CENTER_POS\n        this.radius = radius\n        this.color = color\n        this.dx = Math.random() - 0.5 * getRandomInt(1, 3)\n        this.dy = Math.random() - 0.5 * getRandomInt(1, 3)\n        this.type = \"Circle\"\n        this.side = 0\n        this.lineWidth = 1\n    }\n}\n\nexport class Triangle extends shape {\n    constructor(pos = CENTER_POS) {\n        super()\n        this.pos = pos\n        this.radius = 70 // how big the trainagle is\n        this.color = \"#2878cc\"\n        this.dx = (Math.random() - 0.5 ) * getRandomInt(1, 5)\n        this.dy = (Math.random() - 0.5) * getRandomInt(1, 5) \n        this.type = \"Polygon\"\n        this.sides = 3\n        this.angle = 0\n        this.initCoordinate = RandomPoint(\n            {x: 0, y: 0},\n            this.sides,\n            this.radius,\n        )\n        this.cord = this.initCoordinate\n    }\n}\n\nexport class Polygon extends Triangle {\n    constructor(pos = CENTER_POS) {\n        super()\n        this.pos = pos\n        this.radius = 60\n        this.color = \"#E8465D\"\n        this.dx = Math.random() - 0.5\n        this.dy = Math.random() - 0.5\n        this.type = \"Polygon\"\n        this.angle = 0\n        this.sides = 6\n        this.initCoordinate = RandomPoint(\n            {x: 0, y: 0},\n            this.sides,\n            this.radius,\n        )\n        this.cord = this.initCoordinate\n    }\n}\n","import Player from \"./components/Player.js\"\nimport {PolygonEnemy, CircleEnemy, TriangleEnemey} from \"./components/enemy.js\"\nimport {\n    RandomPoint,\n    getRandomInt,\n    degreeToRadian,\n    posofPointOnCircle,\n} from \"./components/calc.js\"\nimport {Triangle, HollowCircle, Circle, Polygon} from \"./components/shape.js\"\nimport {CENTER_POS} from \"./components/Const.js\"\n\nexport class Game {\n    constructor() {\n        this.player = this.createPlayer()\n        this.levle = 0\n        this.score = 0\n        this.state = 0\n        this.enemyList = []\n        this.landingShape = []\n        this.landingDripple = new HollowCircle()\n        this.dripperList = []\n        this.drippleIn = {\n            color: \"rgba(255, 255, 255, 1)\",\n            radius: window.innerHeight / 2 - 230,\n        }\n        this.drippleOut = {\n            color: \"rgba(255, 255, 255, .3)\",\n            radius: window.innerHeight / 2 - 100,\n        }\n        this.landingMaxRadius = 500\n        this.createEnemey(\n            getRandomInt(1, 3),\n            getRandomInt(1, 3),\n            getRandomInt(1, 4),\n        )\n        this.createDripple()\n        this.createLandingShape()\n    }\n    createLandingShape() {\n        let n = 3\n        let ww = window.innerWidth,\n            wh = window.innerHeight\n        let cord = []\n        for (let i = 0; i < n; i++) {\n            let x = getRandomInt(0, ww),\n                y = getRandomInt(0, wh)\n            cord.push({x: x, y: y})\n        }\n        let s1 = new Triangle(cord[0]),\n            s2 = new Polygon(cord[1]),\n            s3 = new Circle(cord[2])\n        this.landingShape = [s1, s2, s3]\n    }\n    init(state) {\n        this.state = state\n    }\n    start() {\n        this.state = 1\n        this.attack()\n        this.approach()\n    }\n    createDripple() {\n        this.drippleList = [\n            new HollowCircle(this.drippleIn.color, this.drippleIn.radius),\n            new HollowCircle(this.drippleOut.color, this.drippleOut.radius),\n        ]\n    }\n    startDripple() {\n        let ww = window.innerWidth / 2\n        if (this.drippleOut.radius < ww + 50) {\n            this.drippleOut.radius += 2\n        } else {\n            this.drippleOut.radius = Math.abs(ww - 330)\n        }\n\n        if (this.drippleIn.radius < ww + 50) {\n            this.drippleIn.radius += 3\n        } else {\n            this.drippleIn.radius = Math.abs(ww - 430)\n        }\n\n        this.drippleList = [\n            new HollowCircle(this.drippleIn.color, this.drippleIn.radius),\n            new HollowCircle(this.drippleOut.color, this.drippleOut.radius),\n        ]\n    }\n    createPlayer() {\n        let player = new Player()\n        return player\n    }\n    createEnemey(p = 1, t = 1, c = 1) {\n        let len = p + t + c,\n            mapList = (\"p\".repeat(p) + \"t\".repeat(t) + \"c\".repeat(c)).split(\"\")\n\n        let angleInterval,\n            angleSum = 0,\n            margin = 50,\n            defualtAngle = 360 / len\n\n        let list = mapList.map(letter => {\n            angleInterval = getRandomInt(\n                defualtAngle - margin,\n                defualtAngle + margin,\n            )\n            angleSum += angleInterval\n            if (letter === \"p\") {\n                return new PolygonEnemy(getRandomInt(40, 80), angleSum)\n            } else if (letter === \"t\") {\n                return new TriangleEnemey(getRandomInt(40, 60), angleSum)\n            } else {\n                return new CircleEnemy(getRandomInt(30, 50), angleSum)\n            }\n        })\n        this.enemyList = list\n    }\n    attack() {\n        this.enemyList.forEach(enemy => {\n            enemy.autoEmit()\n        })\n    }\n    approach() {\n        this.enemyList.forEach(enemy => {\n            enemy.move()\n        })\n    }\n    moveBullet() {\n        this.player.moveBullet()\n        this.enemyList.forEach(enemy => {\n            enemy.moveBullet(-1)\n            this.killEnemy()\n        })\n    }\n    killEnemy() {\n        if (this.enemyList.length) {\n            let list = this.enemyList.filter(enemy => enemy.life >= 0)\n            this.enemyList = list\n            this.enemyList.forEach(enemy => {\n                enemy.collide(this.player)\n            })\n        }\n    }\n    drawLanding(context) {\n        context.drawLanding(this.landingShape)\n        context.drawLanding(this.drippleList)\n    }\n    draw(context) {\n        context.drawPlayer(this.player)\n        context.drawEnemies(this.enemyList)\n        context.drawPlayingScene()\n    }\n    detect() {\n        if (!this.enemyList.length) {\n            this.state = -2\n        }\n        let touchedEnemy = this.enemyList.filter(\n            enemy => enemy.positionRadius <= 130,\n        ).length\n        if (touchedEnemy) {\n            this.state = -1\n        }\n    }\n    moveLandingShape() {\n        let list = this.landingShape\n        let ww = window.innerWidth,\n            wh = window.innerHeight\n        for (let i = 0; i < list.length; i++) {\n            let shape = list[i]\n            if (shape.pos.x + 100 > ww || shape.pos.x < 0) {\n                shape.dx = -shape.dx\n            }\n            if (shape.pos.y + 100 > wh || shape.pos.y < 0) {\n                shape.dy = -shape.dy\n            }\n            let x = shape.pos.x + shape.dx\n            let y = shape.pos.y + shape.dy\n            shape.pos = {x: x, y: y}\n        }\n    }\n    landingAnimation() {\n        this.startDripple()\n        this.moveLandingShape()\n    }\n}\n","import \"./style/main.scss\"\nimport React, {Component} from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Player from \"./components/Player.js\"\nimport CanvasTool from \"./components/Canvas.js\"\nimport {SplitEnemy} from \"./components/enemy.js\"\nimport {Game} from \"./Game.js\"\n\nconst playerBulletList = []\nconst enemyList = []\nlet game = new Game()\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            game: game.state\n        }\n        this.start = this.start.bind(this)\n    }\n    start() {\n        this.setState({\n            playing: true,\n        })\n    }\n    render() {\n        const content = (\n            <div className=\"landing\">\n                <div className=\"content\">\n                    <h1>R</h1>\n                    <h2>Radio Defense</h2>\n                    <a onClick={this.start}>Start Game</a>\n                </div>\n                <div className=\"notes\">\n                    Press W or Space to shoot. Press Arrow Key to control\n                    direction\n                </div>\n            </div>\n        )\n        return this.state.playing ? <div /> : content\n    }\n}\n\nReactDOM.render(<App />, document.getElementById(\"main\"))\n\nlet cns = new CanvasTool(document.getElementById(\"main\"))\n\ngame.init(0)\n\n\nlet start = new Date().getTime()\nconst update = () => {\n    let current = new Date().getTime(),\n        dt = current - start,\n        delay = 1\n    if (dt >= delay) {\n        game.moveBullet()\n        if (game.state === 0) {\n            game.landingAnimation()\n        }\n        start = new Date().getTime()\n    }\n    cns.clear()\n    // game state\n    // -1: game over\n    // 0: landing\n    // 1: playing\n    if (game.state === 0) {\n        game.drawLanding(cns)\n    } else if (game.state === 1) {\n        game.draw(cns)\n        game.detect()\n    } else if (game.state < 0) {\n        cns.drawEnding(game.state+2)\n    } \n    requestAnimationFrame(update)\n}\n\ndocument.addEventListener(\"keydown\", e => {\n    if (e.code === \"ArrowLeft\" || e.code === \"KeyH\") {\n        game.player.angle -= 5\n    } else if (e.code === \"ArrowRight\" || e.code === \"KeyL\") {\n        game.player.angle += 5\n    } else if (e.code === \"Space\" || e.code === \"KeyW\") {\n        game.player.emit()\n    }\n})\n\nlet startBtn = document.querySelector(\"a\")\nif (startBtn) {\n    startBtn.addEventListener(\"click\", e => {\n        game.state = 1\n        cns.clear()\n        game.start()\n    })\n}\n\n\n\ndocument.addEventListener(\"click\", e => {\n    if (game.state === 1) {\n        game.player.emit()\n    }\n})\n\ndocument.addEventListener(\n    \"mousemove\",\n    e => {\n        let cx = e.clientX,\n            cy = e.clientY\n        game.player.setAngle(cx, cy)\n    },\n    false,\n)\n\nupdate()\n"],"sourceRoot":""}